name: Python Tests
on:
  pull_request:
    branches:
      - main

env:
  python-version: 3.13

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    if: github.actor != 'renovate[bot]'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install uv
          uv sync --locked --all-groups

      - name: Run Tests
        id: test
        run: |
          {
            echo 'STDOUT<<EOF'
            uv run pytest tests/
            echo EOF
          } >> "$GITHUB_OUTPUT"
          

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `### Test Results for Run \`${{ github.run_id }}\`

            #### Tests
            <details><summary>Test Results</summary>
            
            \`\`\`\n
            ${{ steps.test.outputs.stdout }}
            \`\`\`
            
            </details>
            `;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Test Results for Run')
            })
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }
